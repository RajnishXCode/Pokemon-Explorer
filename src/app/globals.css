@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base variables - might turn this into a proper theme later */
:root {
  --background: #f8fafc;
  --foreground: #171717;
  --card-bg: #ffffff;
  --primary: #3b82f6;
  --primary-hover: #2563eb;
  --accent: #f97316;
}

/* Dark mode stuff - not fully implemented yet but keeping for later */
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0f172a;
    --foreground: #f8fafc;
    --card-bg: #1e293b;
    --primary: #60a5fa;
    --primary-hover: #3b82f6;
  }
}

/* Basic float animation for some flair */
@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0px); }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

/* Pokeball background pattern - nice little touch */
.pokeball-pattern {
  background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='30' cy='30' r='15' stroke='%23000' stroke-opacity='0.05' stroke-width='2'/%3E%3Ccircle cx='30' cy='30' r='3' fill='%23000' fill-opacity='0.05'/%3E%3C/g%3E%3C/svg%3E");
}

body {
  color: var(--foreground);
  background-color: var(--background);
}

/* Card hover effect - used in PokemonCard */
.pokemon-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/* Shiny effect for cards and buttons */
.shine {
  position: relative;
  overflow: hidden;
}

.shine::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 20%;
  height: 200%;
  opacity: 0;
  transform: rotate(30deg);
  background: rgba(255, 255, 255, 0.3);
  background: linear-gradient(
    to right, 
    rgba(255, 255, 255, 0.1) 0%,
    rgba(255, 255, 255, 0.4) 50%,
    rgba(255, 255, 255, 0.1) 100%
  );
}

/* Animation for the shine effect */
.shine:hover::after {
  opacity: 1;
  left: 130%;
  transition-property: left, opacity;
  transition-duration: 0.7s, 0.15s;
  transition-timing-function: ease;
}

/* Stats bar growing animation */
@keyframes growWidth {
  from { width: 0; }
  to { width: var(--final-width, 100%); }
}

.stat-bar {
  animation: growWidth 1s ease-out forwards;
  width: 0; /* Start at 0 width */
}